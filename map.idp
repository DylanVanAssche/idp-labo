/*  
 * map.idp
 * Dylan Van Assche - MaICT
 */

vocabulary V {
	type Kleur
	type Land
	Grens(Land, Land)
    //ToegekendeKleur(Land): Kleur // Deel functies
    ToegekendeKleur(Land, Kleur)
}

structure S : V {
	Kleur = { Rood; Oranje; Geel; Groen; Blauw }
	Land = { Belgie; Nederland; Duitsland; Luxemburg; Frankrijk; Zwitserland; Oostenrijk }
	Grens = { 
		(Nederland,Belgie); 	 (Nederland,Duitsland);  (Belgie,Frankrijk);
		(Belgie,Luxemburg); 	 (Belgie,Duitsland); 	 (Luxemburg,Frankrijk); 
		(Luxemburg, Duitsland);  (Frankrijk,Duitsland);  (Frankrijk,Zwitserland); 
		(Duitsland,Zwitserland); (Duitsland,Oostenrijk); (Zwitserland,Oostenrijk); 
    }
}

theory T : V {
	//!land1,land2: Grens(land1, land2) => (ToegekendeKleur(land1) ~= ToegekendeKleur(land2)). // Deel functies
    !land1, land2, kleur1, kleur2: Grens(land1, land2) => ToegekendeKleur(land1, kleur1) ~= ToegekendeKleur(land2, kleur2).

}

procedure main() {
    stdoptions.nbmodels = 10
    printmodels(modelexpand(T,S))
}
